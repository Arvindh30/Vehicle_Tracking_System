
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import java.text.MessageFormat;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import javax.swing.JFrame;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Arvindh Kumar
 */
public class GateEntry extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public GateEntry() {
     // Move this line here
    setAlwaysOnTop(true);
     // Fixed the method name to setResizable
    initComponents();
    Toolkit tk = Toolkit.getDefaultToolkit();
    
    int x = (int) tk.getScreenSize().getWidth();
    int y = (int) tk.getScreenSize().getHeight();
    setSize(x, y);

    setVisible(true); // Move this line here
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        vehnumtf = new javax.swing.JTextField();
        driveridtf = new javax.swing.JTextField();
        drivertf = new javax.swing.JTextField();
        rmtf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        supidtf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        drivernumtf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        transnametf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        suptf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        pwtf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cwtf = new javax.swing.JTextField();
        pocb = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        transnumtf = new javax.swing.JTextField();
        check2 = new javax.swing.JButton();
        wheelscb1 = new javax.swing.JComboBox<>();
        check = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        resetbutton = new javax.swing.JButton();
        inbutton = new javax.swing.JButton();
        outbutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        searchbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gatetable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MENU");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Vehicle Number");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 140, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Driver ID");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 80, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Driver");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 60, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Purchase Order");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, 140, -1));

        vehnumtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(vehnumtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 200, -1));

        driveridtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(driveridtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 280, -1));

        drivertf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        drivertf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drivertfActionPerformed(evt);
            }
        });
        jPanel4.add(drivertf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 280, -1));

        rmtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rmtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmtfActionPerformed(evt);
            }
        });
        jPanel4.add(rmtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 280, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Supplier ID");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 110, -1));

        supidtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(supidtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 280, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Supplier");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 80, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Driver Number");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 130, -1));

        drivernumtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(drivernumtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 280, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Raw Material");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Transpoter Name");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 20, -1, -1));

        transnametf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(transnametf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 20, 280, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Transpoter Number");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 80, 170, -1));

        suptf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        suptf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suptfActionPerformed(evt);
            }
        });
        jPanel4.add(suptf, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 280, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("No.of.Wheels");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, 170, -1));

        pwtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pwtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwtfActionPerformed(evt);
            }
        });
        jPanel4.add(pwtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 200, 70, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Console Weight");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 200, -1, -1));

        cwtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPanel4.add(cwtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1430, 200, 70, 30));

        pocb.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pocb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pocbActionPerformed(evt);
            }
        });
        jPanel4.add(pocb, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 200, 40));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText(" Purchased Weight");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 200, 170, -1));

        transnumtf.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        transnumtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transnumtfActionPerformed(evt);
            }
        });
        jPanel4.add(transnumtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 80, 280, -1));

        check2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        check2.setText("Check");
        check2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check2ActionPerformed(evt);
            }
        });
        jPanel4.add(check2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 130, 70, 40));

        wheelscb1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        wheelscb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "12", "14" }));
        wheelscb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wheelscb1ActionPerformed(evt);
            }
        });
        jPanel4.add(wheelscb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 130, 280, 40));

        check.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        jPanel4.add(check, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, 70, 30));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1510, 250));

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        resetbutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        resetbutton.setText("RESET");
        resetbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbuttonActionPerformed(evt);
            }
        });
        jPanel6.add(resetbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 10, 220, 40));

        inbutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        inbutton.setText("IN");
        inbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inbuttonActionPerformed(evt);
            }
        });
        jPanel6.add(inbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 220, 40));

        outbutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        outbutton.setText("OUT");
        outbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outbuttonActionPerformed(evt);
            }
        });
        jPanel6.add(outbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 220, 40));

        deletebutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deletebutton.setText("DELETE");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        jPanel6.add(deletebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 220, 40));

        updatebutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updatebutton.setText("UPDATE");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });
        jPanel6.add(updatebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 220, 40));

        searchbutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchbutton.setText("SEARCH");
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });
        jPanel6.add(searchbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 10, 220, 40));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 1510, 60));

        gatetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tracking ID", "Driver ID", "Driver ", "Vehicle Num", "Supplier ID", "Supplier ", "PO", "Raw Material", "Weight", "Console Weight", "No.of.Wheels", "IN_Time", "IN_Date", "OUT_Time", "OUT_Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gatetable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 1510, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

void reset(){
try
        {
            driveridtf.setText(null);
            drivertf.setText(null);
            drivernumtf.setText(null);
            vehnumtf.setText(null);
            driveridtf.setText(null);
            supidtf.setText(null);
            suptf.setText(null);
            rmtf.setText(null);
            transnametf.setText(null);
            transnumtf.setText(null);
            pwtf.setText(null);
            cwtf.setText(null);
            pocb.removeAllItems();
            wheelscb1.setSelectedIndex(0);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        } 
}
   
    private void inbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inbuttonActionPerformed
                         
    int z;
    z = trackid();
    String did = driveridtf.getText();
    SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm a");
    String in = timeFormat.format(Calendar.getInstance().getTime());
    SimpleDateFormat dateinFormat = new SimpleDateFormat("yyyy.MM.dd");
    String ind = dateinFormat.format(Calendar.getInstance().getTime());
    String d = drivertf.getText();
    String dn = drivernumtf.getText();
    String vn = vehnumtf.getText();
    String spid = supidtf.getText();
    String s = suptf.getText();
    String po = (String) pocb.getSelectedItem();
    String rm = rmtf.getText();
    String tn = transnametf.getText();
    String tname = transnumtf.getText();
    String pw = pwtf.getText();
    String conw = cwtf.getText();
    String whe = (String) wheelscb1.getSelectedItem();
    String out = "NULL";
    String outd = "NULL";
    
    reset();
    if( "".equals(vn))
    {
        JOptionPane.showMessageDialog(this, "Enter vehicle number !!!");
    }
    else
    {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();

        // Check if the same vehicle number with null out_time and out_date exists
        String selectQuery = "SELECT * FROM gatedetails WHERE vehicle_number = '" + vn + "' AND out_time IS NULL AND out_date IS NULL;";
        System.out.println(selectQuery);
        ResultSet rs = stm.executeQuery(selectQuery);
        if (rs.next()) {
            // An entry with the same vehicle number and null out_time/out_date already exists
            // Show an alert message or take appropriate action
            JOptionPane.showMessageDialog(this, "The vehicle with number " + vn + " is already checked in.");
        } else {
            // No matching entry, so perform the INSERT
            String sql = "INSERT INTO gatedetails VALUES("+z+"," + did + ",'" + d + "','" + dn + "','" + vn + "','" + spid + "','" + s + "','" + po + "','" + rm + "','" + tn + "','" + tname + "'," + pw + "," + conw + "," + whe + ",'" + in + "','" + ind + "'," + out + "," + outd + ")";
            System.out.println(sql);
            stm.executeUpdate(sql);
            con.close();
            display();
        }
    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
    }
            }
    }//GEN-LAST:event_inbuttonActionPerformed

    void display() {
    try {
        gatetable.setModel(new DefaultTableModel(null, new String[]{"Tracking ID", "Driver ID", "Driver", "Vehicle Number", "Supplier ID", "Supplier", "PO", "Raw Material", "Weight", "Console Weight", "No_of_Wheels", "IN_Time", "IN_Date", "OUT_Time", "OUT_Date"}));
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
             Statement st = con.createStatement()) {
            String query = "SELECT tracking_id, driver_id, driver, vehicle_number, supplier_id, supplier, po, raw_material, weight, console_weight, `no_of_wheels`, in_time, in_date, out_time, out_date FROM gatedetails ORDER BY tracking_id;";
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) gatetable.getModel();
            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colName);
            String tid, did, d, vn, sid, s, po, rm, w, cw, now, it, id, ot, od;
            while (rs.next()) {

                tid = rs.getString(1);
                did = rs.getString(2);
                d = rs.getString(3);
                vn = rs.getString(4);
                sid = rs.getString(5);
                s = rs.getString(6);
                po = rs.getString(7);
                rm = rs.getString(8);
                w = rs.getString(9);
                cw = rs.getString(10);
                now = rs.getString(11);
                it = rs.getString(12);
                id = rs.getString(13);
                ot = rs.getString(14);
                od = rs.getString(15);
                String[] row = {tid, did, d, vn, sid, s, po, rm, w, cw, now, it, id, ot, od};
                model.addRow(row);

            }
        }
    } catch (ClassNotFoundException | SQLException e1) {
    }
}
    
    private void togetsupplierid() {
    try {
        String vn = vehnumtf.getText();
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String sql = "SELECT supplier_id FROM suppliervehicle WHERE vehicle_number = '" + vn + "'";
        ResultSet rs = stm.executeQuery(sql);

        if (rs.next()) {
            String supplierid = rs.getString("supplier_id");
            supidtf.setText(supplierid);
        } else {
            // Supplier ID not found in the database, do something here (e.g., display an error message)
        }
        con.close();
        display();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)

    }
}
   private void togetsuppliername() {
   try {
        String spid = supidtf.getText();
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String sql = "SELECT supplier_name FROM suppliers WHERE supplier_id = '" + spid + "'";
        ResultSet rs = stm.executeQuery(sql);

        if (rs.next()) {
            String suppliername = rs.getString("supplier_name");
            suptf.setText(suppliername);
        } else {
            // Supplier ID not found in the database, do something here (e.g., display an error message)
        }

        con.close();
        display();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)

    }
}
   
   private void togetpo() {
    try {
        String spid = supidtf.getText();
        pocb.removeAllItems();
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String sql = "SELECT supplier_po FROM purchaseorder WHERE supplier_id = '" + spid + "'";
        ResultSet rs = stm.executeQuery(sql);
        while (rs.next()) {
            String po = rs.getString("supplier_po");
            pocb.addItem(po);
        }
        con.close();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)
    }
}
   private void togetwrm() {
   try {
        String po = (String) pocb.getSelectedItem();
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String sql = "SELECT raw_material,weight FROM purchaseorder WHERE supplier_po = '" + po + "'";
        ResultSet rs = stm.executeQuery(sql);

        if (rs.next()) {
            String rm = rs.getString("raw_material");
            rmtf.setText(rm);
            String w = rs.getString("weight");
            pwtf.setText(w);
        } else {
            // Supplier ID not found in the database, do something here (e.g., display an error message)
        }

        con.close();
        display();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)

    }
}
   private int trackid()
        {
            int Count=0;
        try
        {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
                //System.out.println("hi");
                try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco","root","Arvindh#01")) {
                    //System.out.println("hi");
                    Statement st = con.createStatement();
                    //String VN = vehnum.getText();
                    String sql ="select max(tracking_id) as TRACKING_ID from gatedetails  ;";
                    System.out.println(sql);
                    ResultSet rs = st.executeQuery(sql);
                    //System.out.print(rs);
                    while(rs.next())
                    {
                        //System.out.println("hi");
                        String TI = rs.getString("tracking_id");
                        System.out.println(TI);
                        if(TI == null)
                        {
                            Count++;
                            System.out.print(Count);
                        }
                        else
                        {
                            String K = rs.getString("tracking_id");
                            Count = Integer.parseInt(K);
                            Count++;
                            System.out.print(Count);
                        }
                    }    
                con.close();
                }
        }
        catch (ClassNotFoundException | SQLException e1)
        {

        }
            return Count;
        }
   
    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        // TODO add your handling code here:
        String vn = vehnumtf.getText();
        if( "".equals(vn))
        {
            JOptionPane.showMessageDialog(this, "Enter vehicle number !!!");
        }
        else
        {
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String selectQuery = "SELECT * FROM gatedetails WHERE vehicle_number = '" + vn + "' AND out_time IS NULL AND out_date IS NULL;";
        ResultSet rs = stm.executeQuery(selectQuery);
        if (rs.next()) {
            String sql = "DELETE FROM gatedetails WHERE vehicle_number = '"+vn+"' AND out_time IS NULL;";           
            System.out.println(sql);
            stm.executeUpdate(sql);
            con.close();
            JOptionPane.showMessageDialog(this, "Deleted !!");
            reset();
            display();
            
        } else {
               JOptionPane.showMessageDialog(this, "The vehicle with number " + vn + " is Not Available.");
        }
        con.close();
        display();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)
    }
        }
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        // TODO add your handling code here:
        String vn = vehnumtf.getText();
        if( "".equals(vn))
        {
            JOptionPane.showMessageDialog(this, "Enter vehicle number !!!");
        }
        else
        {
        try {
        
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
             Statement st = con.createStatement()) {
            String query = "SELECT tracking_id, driver_id, driver, vehicle_number,driver_number, supplier_id, supplier, raw_material,transporter_name, transporter_number, weight, console_weight FROM gatedetails WHERE vehicle_number ='"+vn+"' ORDER BY tracking_id;";
            System.out.println(query);
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                driveridtf.setText(rs.getString(2));
                drivertf.setText(rs.getString(3));
                vehnumtf.setText(rs.getString(4));
                drivernumtf.setText(rs.getString(5));
                supidtf.setText(rs.getString(6));
                suptf.setText(rs.getString(7));
                rmtf.setText(rs.getString(8));
                transnametf.setText(rs.getString(9));
                transnumtf.setText(rs.getString(10));
                pwtf.setText(rs.getString(11));
                cwtf.setText(rs.getString(12));
            }
        }
    } catch (ClassNotFoundException | SQLException e1) {
    }       
        }
    }//GEN-LAST:event_searchbuttonActionPerformed

    private void rmtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rmtfActionPerformed

    private void pwtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwtfActionPerformed

    private void drivertfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drivertfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drivertfActionPerformed

    private void outbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outbuttonActionPerformed
        // TODO add your handling code here:
        String vn = vehnumtf.getText();
        SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm a");
    String out = timeFormat.format(Calendar.getInstance().getTime());
    SimpleDateFormat dateinFormat = new SimpleDateFormat("yyyy.MM.dd");
    String outd = dateinFormat.format(Calendar.getInstance().getTime());

        if( "".equals(vn))
        {
            JOptionPane.showMessageDialog(this, "Enter vehicle number !!!");
        }
        else
        {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();

        // Check if the same vehicle number with null out_time and out_date exists
        String selectQuery = "SELECT * FROM gatedetails WHERE vehicle_number = '" + vn + "' AND out_time IS NULL AND out_date IS NULL;";
        System.out.println(selectQuery);
        ResultSet rs = stm.executeQuery(selectQuery);
        if (rs.next()) {
            String sql =" UPDATE gatedetails SET out_time = '" + out + "', out_date = '" + outd + "' WHERE vehicle_number = '" + vn + "' AND out_time IS NULL ";
            System.out.println(sql);
            stm.executeUpdate(sql);
            con.close();
            reset();
            display();
        } else {
            JOptionPane.showMessageDialog(this, "The vehicle with number " + vn + " has not checked in.");
        }
    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
    }
        }
    }//GEN-LAST:event_outbuttonActionPerformed

    private void suptfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suptfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suptfActionPerformed

    private void transnumtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transnumtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transnumtfActionPerformed

    private void pocbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pocbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pocbActionPerformed

    private void check2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check2ActionPerformed
        // TODO add your handling code here:
        togetwrm();
    }//GEN-LAST:event_check2ActionPerformed

    private void resetbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbuttonActionPerformed
        // TODO add your handling code here:
        try
        {
            driveridtf.setText(null);
            drivertf.setText(null);
            drivernumtf.setText(null);
            vehnumtf.setText(null);
            driveridtf.setText(null);
            supidtf.setText(null);
            suptf.setText(null);
            rmtf.setText(null);
            transnametf.setText(null);
            transnumtf.setText(null);
            pwtf.setText(null);
            cwtf.setText(null);
            pocb.removeAllItems();
            wheelscb1.setSelectedIndex(0);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_resetbuttonActionPerformed

    private void wheelscb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wheelscb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wheelscb1ActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
        togetsupplierid();
        togetsuppliername();
        togetpo();
    }//GEN-LAST:event_checkActionPerformed

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
        // TODO add your handling code here:
        String vn = vehnumtf.getText();
        if( "".equals(vn))
        {
            JOptionPane.showMessageDialog(this, "Enter vehicle number !!!");
        }
        else
        {
        String did = driveridtf.getText();
        SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm a");
        String in = timeFormat.format(Calendar.getInstance().getTime());
        SimpleDateFormat dateinFormat = new SimpleDateFormat("yyyy.MM.dd");
        String ind = dateinFormat.format(Calendar.getInstance().getTime());
        String d = drivertf.getText();
        String dn = drivernumtf.getText();
        String spid = supidtf.getText();
        String s = suptf.getText();
        String po = (String) pocb.getSelectedItem();
        String rm = rmtf.getText();
        String tname = transnametf.getText();
        String tn = transnumtf.getText();
        String pw = pwtf.getText();
        String conw = cwtf.getText();
        String whe = (String) wheelscb1.getSelectedItem();
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ramco", "root", "Arvindh#01");
        Statement stm = con.createStatement();
        String selectQuery = "SELECT * FROM gatedetails WHERE vehicle_number = '" + vn + "' AND out_time IS NULL AND out_date IS NULL;";
        ResultSet rs = stm.executeQuery(selectQuery);
        if (rs.next()) {
            String sql = "UPDATE gatedetails SET driver_id = "+did+" , driver = '"+d+"', driver_number = '"+dn+"', supplier_id = '"+spid+"', supplier = '"+s+"', po = '"+po+"', raw_material = '"+rm+"', transporter_name = '"+tname+"', transporter_number = '"+tn+"', weight = "+pw+", console_weight = "+conw+", no_of_wheels = "+whe+", in_time = '"+in+"', in_date = '"+ind+"' WHERE vehicle_number = '"+vn+"' AND out_time IS NULL;";           
            System.out.println(sql);
            stm.executeUpdate(sql);
            con.close();
            JOptionPane.showMessageDialog(this, "Updated !!");
            reset();
            display();
            
        } else {
               JOptionPane.showMessageDialog(this, "The vehicle with number " + vn + " is Not Available.");
        }

        con.close();
        display();
    } catch (ClassNotFoundException | SQLException e) {
        // Handle exceptions appropriately (e.g., display an error message or log the error)

    }
        }
    }//GEN-LAST:event_updatebuttonActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GateEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GateEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GateEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GateEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GateEntry().setVisible(true);
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JButton check2;
    private javax.swing.JTextField cwtf;
    private javax.swing.JButton deletebutton;
    private javax.swing.JTextField driveridtf;
    private javax.swing.JTextField drivernumtf;
    private javax.swing.JTextField drivertf;
    private javax.swing.JTable gatetable;
    private javax.swing.JButton inbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton outbutton;
    private javax.swing.JComboBox<String> pocb;
    private javax.swing.JTextField pwtf;
    private javax.swing.JButton resetbutton;
    private javax.swing.JTextField rmtf;
    private javax.swing.JButton searchbutton;
    private javax.swing.JTextField supidtf;
    private javax.swing.JTextField suptf;
    private javax.swing.JTextField transnametf;
    private javax.swing.JTextField transnumtf;
    private javax.swing.JButton updatebutton;
    private javax.swing.JTextField vehnumtf;
    private javax.swing.JComboBox<String> wheelscb1;
    // End of variables declaration//GEN-END:variables

    private void setResizeable(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
